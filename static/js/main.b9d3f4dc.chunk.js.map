{"version":3,"sources":["reducer/default-reducer.js","lib/store.js","middleware/logger.js","components/Header.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js","assets/brand-logo.png","assets/mypic.png"],"names":["initialState","appReducer","combineReducers","defaultReducer","state","arguments","length","undefined","action","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","store","next","console","log","getState","result","Title","styled","h1","_templateObject","Navbar","nav","_templateObject2","NavLinks","div","_templateObject3","AvatarSection","_templateObject4","TitleSection","_templateObject5","Avatar","img","_templateObject6","Image","_templateObject7","MainHeader","header","_templateObject8","Header","react_default","a","createElement","src","Logo","alt","style","padding","color","href","build_default","icon","size","ProfilePic","React","Component","Dashboard","react","Header_Header","connect","App","es","BrowserRouter","Fragment","Route","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b9d3f4dc.chunk.js","sourcesContent":["let initialState = [];\n\nexport default (state = initialState, action) => {\n\n  let {type, payload} = action;\n\n  switch(type) {\n    default: return state;\n  }\n\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport defaultReducer from '../reducer/default-reducer.js';\n\nimport logger from '../middleware/logger.js';\n\nconst appReducer = combineReducers({\n  defaultReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(appReducer, composeEnhancers(applyMiddleware(thunk, logger,)));\n\n","export default  store => next => action => {\n  console.log('1. old state is: ', store.getState());\n  console.log('2. actions type is: ', action.type);\n  let result = next(action);\n  console.log('3. new state is: ', store.getState());\n  return result;\n};","import React from 'react'\nimport styled from 'styled-components'\nimport Logo from '../../src/assets/brand-logo.png'\nimport SocialLogo from 'social-logos';\nimport ProfilePic from '../assets/mypic.png'\n\n// Create a Title component that'll render an <h1> tag with some styles\nconst Title = styled.h1`\n  color: #eaa24c;\n//   font-family: 'Archivo Narrow';\n  font-size: 2.75em;\n \n  font-weight:100;\n  \n  \n`;\nconst Navbar = styled.nav`\n    display: flex;\n    flex-direction: row;\n    align-items: center; \n`\nconst NavLinks = styled.div`\n    position:absolute;\n    right:10px;\n`\nconst AvatarSection = styled.div`\n    flex-direction: row\n    align-self: center;\n    \n`\nconst TitleSection = styled.div`\n        margin-left: 30%;\n    margin-top: -10%;\n`\nconst Avatar = styled.img`\n    width: 100px;\n    height: 140px;\n    border-radius: 50%;\n    margin-bottom: -28%;\n    margin-top: 5%;\n    \n`\nconst Image = styled.img`\n    align-self: flex-start;\n    padding-left:10%;\n    padding-top:3%;\n    width: 100px;\n    height: 100px;\n    overflow: hidden; \n    \n`\nconst MainHeader = styled.header`\n    background-color: #3b37528a;\n    display: flex;\n    padding-bottom:10%\n    position:relative;\n    flex-direction: column;\n    \n`;\n// Create a Wrapper component that'll render a <section> tag with some styles\n\nexport default class Header extends React.Component{\n   \n// Use Title and Wrapper like any other React component â€“ except they're styled!\nrender(){\nreturn (\n  <MainHeader>\n    <Navbar>\n      <Image src={Logo} alt=\"\" />\n      <NavLinks>\n        <a\n           style={{ padding: \"5px\", color: \"white\" }}\n          href=\"mailto:madhurebbana@gmail.com\"\n        >\n          <SocialLogo icon=\"mail\" size={36} />\n        </a>\n        <a\n          style={{ padding: \"5px\", color: \"white\" }}\n          href=\"https://www.linkedin.com/in/madhurebbana/\"\n        >\n          <SocialLogo icon=\"linkedin\" size={36} />\n        </a>\n        <a style={{ padding: \"5px\" }} href=\"https://github.com/mrebb\">\n          <SocialLogo icon=\"github\" size={36} />\n        </a>\n      </NavLinks>\n    </Navbar>\n    <AvatarSection>\n      <Avatar src={ProfilePic} alt=\"\" />\n      <TitleSection>\n        <Title>Software Developer</Title>\n      </TitleSection>\n    </AvatarSection>\n  </MainHeader>\n);\n}\n}\n\n\n/**\n*/","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../Header.js'\nclass Dashboard extends Component {\n  render() {\n    return (\n      <Fragment>\n      <div>\n       <Header/>\n       </div>\n      </Fragment>\n    );\n  }\n}\n\n\nconst dispatchStateToProps = state => ({ state });\n\nexport default connect(dispatchStateToProps, null)(Dashboard)\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './lib/store.js';\n\nimport Dashboard from './components/dashboard/Dashboard.js';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <React.Fragment>\n            <Route path='/' component={Dashboard} />\n          </React.Fragment>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/brand-logo.a0433299.png\";","module.exports = __webpack_public_path__ + \"static/media/mypic.a53c8509.png\";"],"sourceRoot":""}